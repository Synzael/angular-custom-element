/*
 * AngularCustomElement
 * https://github.com/dgs700/angular-custom-element

 * Version: 0.2.0 - 2014-10-09
 * License: MIT
 */
!function(){"use strict";function customElements(){function register(name,config){function checkNum(v){var n=parseFloat(v);return!isNaN(n)&&isFinite(n)?n:v}function setterBoiler(val,el,oldVal,attr,bool){if(!el)return val;el.setterCalled[attr]=!0;try{el.onPropChange(val),attr&&bool?val?el.setAttribute(attr,""):el.removeAttribute(attr):attr&&el.setAttribute(attr,val)}catch(e){}return oldVal=bool?!!el[prop]:el[prop],el.propChangeNotify(el,prop,val,oldVal,attr,"prop:changed"),val}if(registeredElements[name])return this;if("string"!=typeof name||!/.*-.*/.test(name))return console.error("Invalid element name: ",name),this;name=name.toLowerCase();var prototype=config.parent?config.parent.prototype:config["extends"]?Object.create(document.createElement(config["extends"]).constructor).prototype:HTMLElement.prototype,isa=config["extends"]||null,props=config.properties||{},members=config.members||{},tag={prototype:{}},noop=function(){};for(var member in members)!function(member,members){function memberBP(v,ov,member){return document.dispatchEvent(new CustomEvent("member:changed",{detail:{propName:member,newValue:v,oldValue:ov||null}})),v}var property,getter,setter,value,oldVal,readOnly,that=this;"function"==typeof members[member]?tag.prototype[member]={enumerable:!0,value:members[member]}:(property=members[member],readOnly=property.readOnly||!1,value=property.value||null,getter="function"==typeof property.get?function(){return value=property.get.call(that,value)}:function(){return value},setter=readOnly?noop:"function"==typeof property.set?function(val){val=property.set.call(that,val),oldVal=this[member]||null,value=memberBP(val,oldVal,member)}:function(val){oldVal=this[member]||null,value=memberBP(val,oldVal,member)},tag.prototype[member]={get:getter,set:setter,enumerable:!0})}(member,members);tag.prototype.registerCallback={value:function(el,fn){el.onPropChange=fn},enumerable:!0},tag.prototype.propChangeNotify={value:function(el,propName,newVal,oldVal,attrName,type){el.dispatchEvent(new CustomEvent(type,{detail:{propName:propName,newValue:newVal,oldValue:oldVal,attrName:attrName||null}}))},enumerable:!0},tag.prototype.definition={value:config};var prop,callbacks=config.callbacks||{},created=callbacks.created||noop,attached=callbacks.attached||noop,detached=callbacks.detached||noop,attributeChanged=callbacks.attributeChanged||noop,attributeMap={},properties=[];for(prop in props)!function(prop,props){properties.push(function(el){var property,attr,getter,setter,value,oldVal,readOnly,bool;bool=!1,value=null,attr=null,property=props[prop],readOnly=property.readOnly||!1,bool=property.attribute.boolean?!0:!1,property.attribute&&!readOnly&&el?(attr=property.attribute.name?property.attribute.name:prop.toLowerCase(),attributeMap[attr]={name:prop,bool:bool},bool?value=el.hasAttribute(attr)?!0:property.value?!0:!1:(value=el.hasAttribute(attr)?el.getAttribute(attr):property.value?property.value:null,value=checkNum(value)),el.hasAttribute(attr)||(bool&&value?el.setAttribute(attr,""):bool?el.removeAttribute(attr):el.setAttribute(attr,value)),el.setterCalled[attr]=!1):bool&&!el?value=property.value?!0:!1:(value=property.value?property.value:null,value=checkNum(value)),getter="function"==typeof property.get?property.get:function(){return value},setter=readOnly?noop:"function"==typeof property.set?function(val){val=property.set.call(el,val),val=setterBoiler(val,el,oldVal,attr,bool),value=val}:function(val){value=setterBoiler(val,el,oldVal,attr,bool)},el?Object.defineProperty(el,prop,{get:getter,set:setter,enumerable:!0,configurable:!0}):tag.prototype[prop]={get:getter,set:setter,enumerable:!0}})}(prop,props),properties.forEach(function(fn){fn.call(this,null)});tag.prototype.createdCallback={enumerable:!0,value:function(){this.setterCalled={};var that=this;properties.forEach(function(fn){fn.call(that,that)});var output=created?created.apply(this,arguments):null;return output}},tag.prototype.attributeChangedCallback={enumerable:!0,value:function(attr,oldVal,newVal){if(attributeMap[attr]&&!this.setterCalled[attr]){var prop=attributeMap[attr];prop.bool&&""===newVal&&(newVal=!0),this[prop.name]=prop.bool?!!newVal:checkNum(newVal)}this.setterCalled[attr]=!1;var output=attributeChanged?attributeChanged.apply(this,arguments):null;return output}},tag.prototype.attachedCallback={enumerable:!0,value:function(){var output=attached?attached.apply(this,arguments):null;return output}},tag.prototype.detachedCallback={enumerable:!0,value:function(){var output=detached?detached.apply(this,arguments):null;return output}};var definition={prototype:Object.create(prototype,tag.prototype)};return isa&&(definition["extends"]=isa),registeredElements[name]=document.registerElement(name,definition),this}function $get(){return{info:function($el){return $el[0].__proto__.definition},$watchElement:function(scope,el){scope.el=el[0],scope.el.registerCallback(scope.el,function(){setTimeout(function(){scope.$digest()},0)})},$importElement:function(scope,el,props,eventName){var observer=null,evtBinding=null;return Array.isArray(props)&&(props.forEach(function(val,idx,arr){arr[idx]=arr[idx].toLowerCase()}),observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){-1!==props.indexOf(mutation.attributeName)&&scope.$digest()})}).observe(el[0],{attributes:!0,childList:!0,characterData:!0,attributeOldValue:!0})),eventName&&(evtBinding=el.addEventListener(eventName,function(){scope.$digest()})),Array.isArray(props)&&eventName?{observer:observer,eventBinding:evtBinding}:!1}}}var registeredElements={};window.registeredElements=this.registeredElements=registeredElements,this.register=register,this.$get=$get,$get.$inject=["$window"]}angular.module("customElements",["ng"]).provider("$customElements",customElements)}(window);